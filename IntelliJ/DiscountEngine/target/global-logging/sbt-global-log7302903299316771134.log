[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\MENNATALLAH\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\MENNATALLAH\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.9.9 (Oracle Corporation Java 1.8.0_391)
[debug] Load.defaultLoad until apply took 216.3625ms
[debug]           Load.loadUnit: plugins took 190.9766ms
[debug]           Load.loadUnit: defsScala took 0.6702ms
[debug] [Loading] Scanning directory G:\ITI\23. Apache Scala\Final Project\DiscountEngine\project
[debug]             Load.loadUnit: mkEval took 15.4146ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in G:\ITI\23. Apache Scala\Final Project\DiscountEngine\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 20.7534 ms
[info] loading settings for project discountengine-build from idea.sbt ...
[debug]               Load.resolveProject(discountengine-build) took 59.9872ms
[debug]             Load.loadTransitive: finalizeProject(Project(id discountengine-build, base: G:\ITI\23. Apache Scala\Final Project\DiscountEngine\project, plugins: List(<none>))) took 91.4008ms
[debug] [Loading] Done in G:\ITI\23. Apache Scala\Final Project\DiscountEngine\project, returning: (discountengine-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 4034.2422ms
[debug]           Load.loadUnit: cleanEvalClasses took 8.1029ms
[debug]         Load.loadUnit(file:/G:/ITI/23.%20Apache%20Scala/Final%20Project/DiscountEngine/project/, ...) took 4241.5912ms
[debug]       Load.apply: load took 4407.2095ms
[debug]       Load.apply: resolveProjects took 5.9032ms
[debug]       Load.apply: finalTransforms took 57.9591ms
[debug]       Load.apply: config.delegates took 7.3041ms
[debug]       Load.apply: Def.make(settings)... took 550.5179ms
[debug]       Load.apply: structureIndex took 97.0944ms
[debug]       Load.apply: mkStreams took 2.0504ms
[info] loading project definition from G:\ITI\23. Apache Scala\Final Project\DiscountEngine\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 7186.3522ms
[debug]     Load.loadUnit: defsScala took 0.0025ms
[debug] [Loading] Scanning directory G:\ITI\23. Apache Scala\Final Project\DiscountEngine
[debug]       Load.loadUnit: mkEval took 0.1649ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 1.8189 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 30.6104ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: G:\ITI\23. Apache Scala\Final Project\DiscountEngine, plugins: List(<none>))) took 33.9158ms
[debug] [Loading] Done in G:\ITI\23. Apache Scala\Final Project\DiscountEngine, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 1084.5886ms
[debug]     Load.loadUnit: cleanEvalClasses took 4.3371ms
[debug]   Load.loadUnit(file:/G:/ITI/23.%20Apache%20Scala/Final%20Project/DiscountEngine/, ...) took 8276.9226ms
[debug] Load.apply: load took 8451.3357ms
[debug] Load.apply: resolveProjects took 0.1543ms
[debug] Load.apply: finalTransforms took 25.2727ms
[debug] Load.apply: config.delegates took 0.431ms
[debug] Load.apply: Def.make(settings)... took 77.3796ms
[debug] Load.apply: structureIndex took 20.9932ms
[debug] Load.apply: mkStreams took 0.0024ms
[info] set current project to DiscountEngine (in build file:/G:/ITI/23.%20Apache%20Scala/Final%20Project/DiscountEngine/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 49800 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 49800, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to DiscountEngine (in build file:/G:/ITI/23.%20Apache%20Scala/Final%20Project/DiscountEngine/)
[debug] > Exec(idea-shell, None, None)
